{
  float cirX=mCirX;
  float cirY=mCirY;
  int count=labels.size();
  float stepsAngle=0;
  if (Float.compare(mTotalAngle,360f) == 0) {
    stepsAngle=MathHelper.getInstance().div(mTotalAngle,count);
  }
 else {
    stepsAngle=MathHelper.getInstance().div(mTotalAngle,count - 1);
  }
  float innerRadius1=mRadius;
  float tickRadius=0.0f, detailRadius=0.0f;
  if (XEnum.RoundTickAxisType.INNER_TICKAXIS == mRoundTickAxisType) {
    tickRadius=mRadius * 0.95f;
    detailRadius=tickRadius;
    if (1 < mDetailModeSteps)     tickRadius=tickRadius - mRadius * 0.05f;
  }
 else {
    tickRadius=mRadius + mRadius * 0.05f;
    detailRadius=tickRadius;
    if (1 < mDetailModeSteps)     tickRadius=mRadius + mRadius * 0.08f;
  }
  int steps=mDetailModeSteps;
  float Angle=0.0f;
  float tickMarkWidth=getTickMarksPaint().getStrokeWidth();
  float stopX=0.0f, stopY=0.0f;
  float labelX=0.0f, labelY=0.0f;
  float startX=0.0f, startY=0.0f;
  for (int i=0; i < count; i++) {
    if (0 == i) {
      Angle=mInitAngle;
    }
 else {
      Angle=(float)MathHelper.getInstance().add(mInitAngle,i * stepsAngle);
    }
    MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,innerRadius1,Angle);
    startX=MathHelper.getInstance().getPosX();
    startY=MathHelper.getInstance().getPosY();
    stopX=stopY=0.0f;
    labelX=labelY=0.0f;
    MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,tickRadius,Angle);
    labelX=MathHelper.getInstance().getPosX();
    labelY=MathHelper.getInstance().getPosY();
    if (steps == mDetailModeSteps) {
      stopX=labelX;
      stopY=labelY;
      steps=0;
    }
 else {
      MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,detailRadius,Angle);
      stopX=MathHelper.getInstance().getPosX();
      stopY=MathHelper.getInstance().getPosY();
      steps++;
    }
    if (isShowTickMarks()) {
      if (0 == steps && mLongTickfakeBold) {
        getTickMarksPaint().setStrokeWidth(tickMarkWidth + 1);
      }
 else {
        if (mLongTickfakeBold)         getTickMarksPaint().setStrokeWidth(tickMarkWidth);
      }
      canvas.drawLine(startX,startY,stopX,stopY,getTickMarksPaint());
    }
    if (isShowAxisLabels()) {
      String label=getFormatterLabel(labels.get(i));
      PointF pLabel=getLabelXY(label,labelX,labelY,cirX,cirY,mTotalAngle,Angle);
      DrawHelper.getInstance().drawRotateText(label,pLabel.x,pLabel.y,getTickLabelRotateAngle(),canvas,getTickLabelPaint());
    }
  }
  return true;
}
