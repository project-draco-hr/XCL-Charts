{
  try {
    chart.setChartRange(0.0f,0.0f,getScreenWidth(),getScreenHeight());
    chart.setPadding(20,20,10,5);
    chart.setCategories(mLabels);
    chart.setDataSource(mDataset);
    chart.getDataAxis().setAxisMax(100);
    chart.getDataAxis().setAxisSteps(10);
    chart.getPlotGrid().showHorizontalLines();
    chart.getPlotGrid().showVerticalLines();
    chart.setTopAxisVisible(false);
    chart.setRightAxisVisible(false);
    chart.getDataAxis().setAxisLineVisible(false);
    chart.getDataAxis().setTickMarksVisible(false);
    chart.getCategoryAxis().setAxisLineVisible(false);
    chart.getCategoryAxis().setTickMarksVisible(false);
    chart.setTitle("?????????(Area Chart)");
    chart.addSubtitle("(XCL-Charts Demo)");
    chart.getLegend().setLowerLegend("(??????)");
    chart.getPlotKey().showKeyLabels();
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        Double tmp=Double.parseDouble(value);
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(tmp).toString();
        return (label);
      }
    }
);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(value).toString();
        return label;
      }
    }
);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Log.e(TAG,e.toString());
  }
}
