{
  try {
    int[] ltrb=getBarLnDefaultSpadding();
    chart.setPadding(ltrb[0],ltrb[1],ltrb[2],ltrb[3]);
    chart.setCategories(mLabels);
    chart.setDataSource(mDataset);
    chart.setCrurveLineStyle(XEnum.CrurveLineStyle.BEELINE);
    chart.getDataAxis().setAxisMax(100);
    chart.getDataAxis().setAxisSteps(10);
    chart.getPlotGrid().showHorizontalLines();
    chart.getPlotGrid().showVerticalLines();
    chart.hideTopAxis();
    chart.hideRightAxis();
    chart.getDataAxis().hideAxisLine();
    chart.getDataAxis().hideTickMarks();
    chart.getCategoryAxis().hideAxisLine();
    chart.getCategoryAxis().hideTickMarks();
    chart.setAreaAlpha(100);
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        Double tmp=Double.parseDouble(value);
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(tmp).toString();
        return (label);
      }
    }
);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(value).toString();
        return label;
      }
    }
);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Log.e(TAG,e.toString());
  }
}
