{
  int baseLightColor=DrawHelper.getInstance().getLightColor(getAxis3DBaseColor(),mAlpha);
  mPaintBase.setColor(getAxis3DBaseColor());
  mPaintBase3D.setColor(baseLightColor);
  float offsetX=(float)(getOffsetX());
  float offsetY=(float)(getOffsetY());
  float baseLeft2=MathHelper.getInstance().sub(baseLeft,offsetX);
  float baseTop2=MathHelper.getInstance().add(baseTop,offsetY);
  float baseBottom2=MathHelper.getInstance().add(baseBottom,offsetY);
  mPathRectangle2D.reset();
  mPathRectangle2D.moveTo(baseLeft,baseTop);
  mPathRectangle2D.lineTo(baseLeft2,baseTop2);
  mPathRectangle2D.lineTo(baseLeft2,baseBottom2);
  mPathRectangle2D.lineTo(baseLeft,baseBottom);
  mPathRectangle2D.close();
  canvas.drawPath(mPathRectangle2D,mPaintBase);
  canvas.drawRect(baseLeft2,baseTop2,MathHelper.getInstance().sub(baseLeft2,offsetX),baseBottom2,mPaintBase3D);
  mPathRectangle2D.reset();
  mPathRectangle2D.moveTo(baseLeft,baseTop);
  mPathRectangle2D.lineTo(baseLeft2,baseTop2);
  mPathRectangle2D.lineTo(MathHelper.getInstance().sub(baseLeft2,offsetX),baseTop2);
  mPathRectangle2D.lineTo(MathHelper.getInstance().sub(baseLeft,offsetX),baseTop);
  mPathRectangle2D.close();
  canvas.drawPath(mPathRectangle2D,mPaintBase3D);
}
