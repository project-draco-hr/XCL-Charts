{
  int lightColor=DrawHelper.getInstance().getLightColor(color,mAlpha);
  getBarPaint().setColor(color);
  mPaint3D.setColor(lightColor);
  double offsetX=getOffsetX();
  double offsetY=getOffsetY();
  float barLeft2=Math.round(barLeft - offsetX);
  float barTop2=Math.round(barTop + offsetY);
  float barRight2=Math.round(barRight - offsetX);
  float barBottom2=Math.round(barBottom + offsetY);
  mPathRectangle2D.reset();
  mPathRectangle2D.moveTo(barLeft,barTop);
  mPathRectangle2D.lineTo(barLeft2,barTop2);
  mPathRectangle2D.lineTo(barRight2,barTop2);
  mPathRectangle2D.lineTo(barRight,barTop);
  mPathRectangle2D.close();
  canvas.drawPath(mPathRectangle2D,getBarPaint());
  mPathRectangle2D.reset();
  mPathRectangle2D.moveTo(barRight,barTop);
  mPathRectangle2D.lineTo(barRight2,barTop2);
  mPathRectangle2D.lineTo(barRight2,barBottom2);
  mPathRectangle2D.lineTo(barRight,barBottom);
  mPathRectangle2D.close();
  canvas.drawPath(mPathRectangle2D,getBarPaint());
  mPathRectangle2D.reset();
  mPathRectangle2D.moveTo(barRight2,barTop2);
  mPathRectangle2D.lineTo(barRight2,barBottom2);
  mPathRectangle2D.lineTo(barLeft2,barBottom2);
  mPathRectangle2D.lineTo(barLeft2,barTop2);
  mPathRectangle2D.close();
  LinearGradient linearGradient=new LinearGradient(barLeft2,barBottom2,barRight2,barBottom2,new int[]{color,lightColor},null,Shader.TileMode.REPEAT);
  mPaint3D.setShader(linearGradient);
  mPaint3D.setStyle(Style.FILL);
  canvas.drawPath(mPathRectangle2D,mPaint3D);
  mPaintLine.reset();
  mPaintLine.setStyle(Style.STROKE);
  mPaintLine.setColor(Color.WHITE);
  mPathRectangle2D.reset();
  mPathRectangle2D.moveTo(barLeft2,barTop2);
  mPathRectangle2D.lineTo(barRight2,barTop2);
  mPathRectangle2D.lineTo(barRight,barTop);
  canvas.drawPath(mPathRectangle2D,mPaintLine);
  canvas.drawLine(barRight2,barTop2,barRight2,barBottom2,mPaintLine);
}
