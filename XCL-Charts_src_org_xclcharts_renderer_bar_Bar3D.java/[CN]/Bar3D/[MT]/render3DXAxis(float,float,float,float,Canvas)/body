{
  int baseLightColor=DrawHelper.getInstance().getLightColor(getAxis3DBaseColor(),mAlpha);
  mPaintBase.setColor(getAxis3DBaseColor());
  mPaintBase3D.setColor(baseLightColor);
  float offsetX=(float)getOffsetX();
  float offsetY=(float)getOffsetY();
  float baseLeft2=MathHelper.getInstance().sub(baseLeft,offsetX);
  float baseTop2=MathHelper.getInstance().add(baseTop,offsetY);
  float baseRight2=MathHelper.getInstance().sub(baseRight,offsetX);
  float baseBottom2=MathHelper.getInstance().add(baseBottom,offsetY);
  Path pBase2D=new Path();
  pBase2D.moveTo(baseLeft,baseBottom);
  pBase2D.lineTo(baseLeft2,baseBottom2);
  pBase2D.lineTo(baseRight2,baseBottom2);
  pBase2D.lineTo(baseRight,baseBottom);
  pBase2D.close();
  canvas.drawPath(pBase2D,mPaintBase3D);
  pBase2D.reset();
  pBase2D.moveTo(baseRight,baseTop);
  pBase2D.lineTo(baseRight2,baseTop2);
  pBase2D.lineTo(baseRight2,baseBottom2);
  pBase2D.lineTo(baseRight,baseBottom);
  pBase2D.close();
  canvas.drawPath(pBase2D,mPaintBase);
  pBase2D.reset();
  pBase2D.moveTo(baseRight2,baseTop2);
  pBase2D.lineTo(baseRight2,baseBottom2);
  pBase2D.lineTo(baseLeft2,baseBottom2);
  pBase2D.lineTo(baseLeft2,baseTop2);
  pBase2D.close();
  canvas.drawPath(pBase2D,mPaintBase);
  Paint paint=new Paint();
  paint.setColor(getAxis3DBaseColor());
  paint.setStyle(Style.FILL);
  pBase2D.reset();
  pBase2D.moveTo(baseRight2,baseBottom2);
  pBase2D.lineTo(baseRight,baseBottom);
  pBase2D.lineTo(baseRight,MathHelper.getInstance().add(baseBottom,mAxisBaseThickness));
  pBase2D.lineTo(baseRight2,baseBottom2 + mAxisBaseThickness);
  pBase2D.close();
  canvas.drawPath(pBase2D,paint);
  paint.setColor(baseLightColor);
  canvas.drawRect(baseLeft2,baseBottom2,baseRight2,baseBottom2 + mAxisBaseThickness,paint);
}
