{
  if (!getKeyVisible())   return;
  DrawHelper dw=new DrawHelper();
  float textHeight=dw.getPaintFontHeight(this.mPaintKey);
  float rectWidth=2 * textHeight;
  float currentX=0.0f;
  float currentY=0.0f;
  if (!isVerticalScreen()) {
    mPaintKey.setTextAlign(Align.RIGHT);
    currentX=plotArea.getPlotRight();
    currentY=this.plotArea.getPlotTop() + textHeight;
  }
 else {
    mPaintKey.setTextAlign(Align.LEFT);
    currentX=plotArea.getPlotLeft();
    currentY=this.plotArea.getPlotBottom();
  }
  int totalTextWidth=0;
  for (  PieData cData : mDataSet) {
    mPaintKey.setColor(cData.getSliceColor());
    if (!isVerticalScreen()) {
      canvas.drawRect(currentX,currentY,currentX - rectWidth,currentY - textHeight,mPaintKey);
      canvas.drawText(cData.getKey(),currentX - rectWidth,currentY,mPaintKey);
      currentY+=textHeight;
    }
 else {
      int keyTextWidth=dw.getTextWidth(mPaintKey,cData.getKey());
      totalTextWidth+=keyTextWidth;
      if (totalTextWidth > plotArea.getPlotWidth()) {
        currentY+=textHeight;
        currentX=plotArea.getPlotLeft();
        totalTextWidth=0;
      }
      canvas.drawRect(currentX,currentY,currentX + rectWidth,currentY - textHeight,mPaintKey);
      canvas.drawText(cData.getKey(),currentX + rectWidth,currentY,mPaintKey);
      currentX+=rectWidth + keyTextWidth + 5;
    }
  }
}
