{
  if (chart.getDyLineVisible())   chart.getDyLine().setCurrentXY(x,y);
  if (!chart.getListenItemClickStatus()) {
    if (chart.getDyLineVisible() && chart.getDyLine().isInvalidate())     this.invalidate();
  }
 else {
    BarPosition record=chart.getPositionRecord(x,y);
    if (null == record) {
      if (chart.getDyLineVisible())       this.invalidate();
      return;
    }
    if (record.getDataID() >= chartData.size())     return;
    BarData bData=chartData.get(record.getDataID());
    if (record.getDataChildID() >= bData.getDataSet().size())     return;
    Double bValue=bData.getDataSet().get(record.getDataChildID());
    chart.showFocusRectF(record.getRectF());
    chart.getFocusPaint().setStyle(Style.STROKE);
    chart.getFocusPaint().setStrokeWidth(3);
    chart.getFocusPaint().setColor(Color.GREEN);
    mPaintToolTip.setAntiAlias(true);
    mPaintToolTip.setColor(bData.getColor());
    mDotToolTip.setDotStyle(XEnum.DotStyle.RECT);
    mDotToolTip.setColor(Color.BLUE);
    chart.getToolTip().setCurrentXY(x,y);
    chart.getToolTip().setStyle(XEnum.DyInfoStyle.ROUNDRECT);
    chart.getToolTip().addToolTip(mDotToolTip,bData.getKey(),mPaintToolTip);
    chart.getToolTip().addToolTip("??????:" + Double.toString(bValue),mPaintToolTip);
    chart.getToolTip().getBackgroundPaint().setAlpha(100);
    chart.getToolTip().setAlign(Align.CENTER);
    chart.getToolTip().setInfoStyle(XEnum.DyInfoStyle.CIRCLE);
    this.invalidate();
  }
}
