{
  renderHorizontalBarDataAxis(canvas);
  renderHorizontalBarLabelAxis(canvas);
  if (null == mDataSet)   return;
  float YSteps=getHorizontalYSteps();
  int barNumber=getDatasetSize(mDataSet);
  int currNumber=0;
  List<Integer> ret=mFlatBar.getBarHeightAndMargin(YSteps,barNumber);
  int barHeight=ret.get(0);
  int barInnerMargin=ret.get(1);
  int labelBarUseHeight=barNumber * barHeight + (barNumber - 1) * barInnerMargin;
  float scrWidth=getAxisScreenWidth();
  float valueWidth=(float)dataAxis.getAxisRange();
  for (int i=0; i < barNumber; i++) {
    BarData bd=mDataSet.get(i);
    List<Double> barValues=bd.getDataSet();
    if (null == barValues)     continue;
    List<Integer> barDataColor=bd.getDataColor();
    int barDefualtColor=bd.getColor();
    mFlatBar.getBarPaint().setColor(barDefualtColor);
    for (int j=0; j < barValues.size(); j++) {
      Double bv=barValues.get(j);
      setBarDataColor(mFlatBar.getBarPaint(),barDataColor,j,barDefualtColor);
      float currLableY=sub(plotArea.getBottom(),mul((j + 1),YSteps));
      float drawBarButtomY=add(currLableY,labelBarUseHeight / 2);
      drawBarButtomY=sub(drawBarButtomY,(barHeight + barInnerMargin) * currNumber);
      float drawBarTopY=sub(drawBarButtomY,barHeight);
      float vaxlen=(float)MathHelper.getInstance().sub(bv,dataAxis.getAxisMin());
      float fvper=div(vaxlen,valueWidth);
      float valuePostion=mul(scrWidth,fvper);
      mFlatBar.renderBar(plotArea.getLeft(),drawBarButtomY,add(plotArea.getLeft(),valuePostion),drawBarTopY,canvas);
      mFlatBar.renderBarItemLabel(getFormatterItemLabel(bv),add(plotArea.getLeft(),valuePostion),sub(drawBarButtomY,barHeight / 2),canvas);
    }
    currNumber++;
  }
  dataAxis.renderAxis(canvas,plotArea.getLeft(),plotArea.getBottom(),plotArea.getLeft(),plotArea.getTop());
  categoryAxis.renderAxis(canvas,plotArea.getLeft(),plotArea.getBottom(),plotArea.getRight(),plotArea.getBottom());
  plotLegend.renderBarKey(canvas,this.mDataSet);
  mCustomLine.setHorizontalPlot(dataAxis,plotArea,this.getAxisScreenWidth());
  mCustomLine.renderHorizontalCustomlinesDataAxis(canvas);
}
