{
  if (null == mDataSet || mDataSet.size() == 0)   return false;
  List<String> dataSet=categoryAxis.getDataSet();
  if (null == dataSet)   return false;
  float XSteps=getVerticalXSteps(getCateTickCount());
  float dataAxisStd=getVPDataAxisStdY();
  float itemFontHeight=0.f;
  if (mFlatBar.getItemLabelsVisible())   itemFontHeight=DrawHelper.getInstance().getPaintFontHeight(mFlatBar.getItemLabelPaint());
  int barNumber=getDatasetSize(mDataSet);
  if (barNumber <= 0)   return false;
  int currNumber=0;
  float[] ret=mFlatBar.getBarWidthAndMargin(XSteps,barNumber);
  if (null == ret || ret.length != 2) {
    Log.w(TAG,"????????????????????????.");
    return false;
  }
  float barWidth=ret[0];
  float barInnerMargin=ret[1];
  float labelBarUseWidth=add(mul(barNumber,barWidth),mul(sub(barNumber,1),barInnerMargin));
  float barLeft=0.0f, barBottom=0.0f, barTop=0.f, barRight=0.f;
  float currLabelX, drawBarStartX, topY, labelTopX, labelTopY;
  int size=mDataSet.size();
  for (int i=0; i < size; i++) {
    BarData bd=mDataSet.get(i);
    List<Double> barValues=bd.getDataSet();
    if (null == barValues)     continue;
    List<Integer> barDataColor=bd.getDataColor();
    mFlatBar.getBarPaint().setColor(bd.getColor());
    int countChild=barValues.size();
    for (int j=0; j < countChild; j++) {
      Double bv=barValues.get(j);
      setBarDataColor(mFlatBar.getBarPaint(),barDataColor,j,bd.getColor());
      currLabelX=add(plotArea.getLeft(),mul((j + 1),XSteps));
      if (XEnum.BarCenterStyle.SPACE == mBarCenterStyle) {
        drawBarStartX=sub(currLabelX,div(XSteps,2));
        drawBarStartX=sub(drawBarStartX,labelBarUseWidth / 2);
      }
 else {
        drawBarStartX=sub(currLabelX,labelBarUseWidth / 2);
      }
      drawBarStartX=add(drawBarStartX,add(barWidth,barInnerMargin) * currNumber);
      labelTopY=topY=getVPValPosition(bv);
      if (dataAxis.getAxisStdStatus()) {
        if (bv < dataAxis.getAxisStd()) {
          barLeft=drawBarStartX;
          barTop=dataAxisStd;
          barRight=add(drawBarStartX,barWidth);
          barBottom=topY;
          labelTopY=labelTopY + itemFontHeight;
        }
 else {
          barLeft=drawBarStartX;
          barTop=topY;
          barRight=add(drawBarStartX,barWidth);
          barBottom=dataAxisStd;
        }
      }
 else {
        barLeft=drawBarStartX;
        barTop=topY;
        barRight=add(drawBarStartX,barWidth);
        barBottom=plotArea.getBottom();
      }
      mFlatBar.renderBar(barLeft,barBottom,barRight,barTop,canvas);
      saveBarRectFRecord(i,j,barLeft + mMoveX,barTop + mMoveY,barRight + mMoveX,barBottom + mMoveY);
      drawFocusRect(canvas,i,j,barLeft,barTop,barRight,barBottom);
      labelTopX=add(drawBarStartX,barWidth / 2);
      drawAnchor(this.mAnchorSet,i,j,canvas,labelTopX,labelTopY,0.0f);
      if (!mEqualAxisMin && Double.compare(dataAxis.getAxisMin(),bv) == 0) {
      }
 else {
        mFlatBar.renderBarItemLabel(getFormatterItemLabel(bv),labelTopX,labelTopY,canvas);
      }
    }
    currNumber++;
  }
  if (null != mCustomLine) {
    mCustomLine.setVerticalPlot(dataAxis,plotArea,getAxisScreenHeight());
    mCustomLine.renderVerticalCustomlinesDataAxis(canvas);
  }
  return true;
}
