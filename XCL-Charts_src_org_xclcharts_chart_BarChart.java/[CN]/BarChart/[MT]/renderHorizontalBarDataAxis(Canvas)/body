{
  int tickCount=dataAxis.getAixTickCount();
  float XSteps=div(this.getAxisScreenWidth(),tickCount);
  float currentX=0.0f;
  float axisX=plotArea.getLeft();
  double currentTickLabel=0d;
  for (int i=0; i <= tickCount; i++) {
    dataAxis.setAxisTickCurrentID(i);
    if (0 == i) {
      currentX=axisX;
      currentTickLabel=dataAxis.getAxisMin();
      this.dataAxis.renderAxisVerticalTick(canvas,currentX,plotArea.getBottom(),Double.toString(currentTickLabel));
      continue;
    }
 else     currentX=add(axisX,mul(i,XSteps));
    if (dataAxis.getTickLabelVisible() && isRenderHorizontalDataAxisTick(currentX,this.mMoveX))     continue;
    currentTickLabel=MathHelper.getInstance().add(dataAxis.getAxisMin(),i * dataAxis.getAxisSteps());
    if (i % 2 != 0) {
      plotGrid.renderOddRowsFill(canvas,currentX,plotArea.getTop(),sub(currentX,XSteps),plotArea.getBottom());
    }
 else {
      plotGrid.renderEvenRowsFill(canvas,currentX,plotArea.getTop(),sub(currentX,XSteps),plotArea.getBottom());
    }
    this.dataAxis.renderAxisVerticalTick(canvas,currentX,plotArea.getBottom(),Double.toString(currentTickLabel));
    plotGrid.setPrimaryTickLine(dataAxis.isPrimaryTick());
    plotGrid.renderGridLinesVertical(canvas,currentX,plotArea.getBottom(),currentX,plotArea.getTop());
  }
}
