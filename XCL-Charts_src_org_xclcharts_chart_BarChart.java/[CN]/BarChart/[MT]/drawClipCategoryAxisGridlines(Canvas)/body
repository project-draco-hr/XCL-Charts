{
  List<String> dataSet=categoryAxis.getDataSet();
  float XSteps=0.0f, YSteps=0.0f;
  int tickCount=dataSet.size();
  int labeltickCount=tickCount + 1;
  if (0 == tickCount) {
    return;
  }
  float axisX=0.0f, axisY=0.0f, currentX=0.0f, currentY=0.0f;
  XEnum.AxisLocation pos=getCategoryAxisLocation();
  if (XEnum.AxisLocation.LEFT == pos || XEnum.AxisLocation.RIGHT == pos || XEnum.AxisLocation.VERTICAL_CENTER == pos) {
    YSteps=getVerticalYSteps(labeltickCount);
    currentX=axisX=getAxisXPos(pos);
    currentY=axisY=plotArea.getBottom();
  }
 else {
    XSteps=getVerticalXSteps(labeltickCount);
    currentY=axisY=getAxisYPos(pos);
    currentX=axisX=plotArea.getLeft();
  }
  mLstCateTick.clear();
  float labelX, labelY;
  for (int i=0; i < tickCount; i++) {
switch (pos) {
case LEFT:
case RIGHT:
case VERTICAL_CENTER:
      currentY=sub(axisY,mul((i + 1),YSteps));
    drawHorizontalGridLines(canvas,plotArea.getLeft(),plotArea.getRight(),i,tickCount,YSteps,currentY);
  if (!categoryAxis.isShowAxisLabels())   continue;
labelY=currentY;
labelX=sub(axisX,get3DOffsetX());
if (XEnum.BarCenterStyle.SPACE == mBarCenterStyle) labelY=add(currentY,div(YSteps,2));
mLstCateTick.add(new PlotAxisTick(labelX,currentY,categoryAxis.getDataSet().get(i),labelX,labelY));
break;
case TOP:
case BOTTOM:
case HORIZONTAL_CENTER:
currentX=add(plotArea.getLeft(),mul((i + 1),XSteps));
drawVerticalGridLines(canvas,plotArea.getTop(),plotArea.getBottom(),i,tickCount,XSteps,currentX);
if (!categoryAxis.isShowAxisLabels()) continue;
float currentY2=add(axisY,get3DBaseOffsetY());
currentX=sub(currentX,get3DBaseOffsetX());
labelX=currentX;
if (XEnum.BarCenterStyle.SPACE == mBarCenterStyle) labelX=sub(currentX,div(XSteps,2));
mLstCateTick.add(new PlotAxisTick(currentX,currentY2,dataSet.get(i),labelX,currentY2));
break;
}
}
}
