{
  try {
    BarChart chart=new BarChart();
    chart.setChartRange(0.0f,0.0f,getScreenWidth(),getScreenHeight());
    chart.setCanvas(this.mCacheCanvas);
    if (chart.isVerticalScreen()) {
      chart.setPadding(15,20,15,10);
    }
 else {
      chart.setPadding(25,20,10,5);
    }
    chart.setChartTitle("??????????????????");
    chart.setChartSubTitle("(XCL-Charts Demo)");
    chart.setChartTitlePosition(XEnum.Postion.CENTER);
    chart.setChartTitleAlign(XEnum.ChartTitleAlign.LEFT);
    chart.setDataSource(chartData);
    chart.setLabels(chartLabels);
    chart.getLegend().setLeftLegend("????????????");
    chart.getLegend().setLowerLegend("?????????(???)");
    chart.getLegend().setRightLegend("?????????????????????,????????????????????????");
    chart.getDataAxis().setAxisMax(500);
    chart.getDataAxis().setAxisMin(100);
    chart.getDataAxis().setAxisSteps(100);
    chart.getDataAxis().getAxisTickLabelsPaint().setColor((int)Color.rgb(199,88,122));
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        String tmp=value + "??????";
        return tmp;
      }
    }
);
    chart.getPlotGrid().setHorizontalLinesVisible(true);
    chart.getPlotGrid().setVerticalLinesVisible(true);
    chart.getPlotGrid().setEvenRowsFillVisible(true);
    chart.getLabelsAxis().setAxisTickLabelsRotateAgent(-45f);
    chart.setChartDirection(XEnum.Direction.HORIZONTAL);
    chart.getBar().setItemLabelsVisible(true);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0.00");
        String label=df.format(value).toString();
        return label;
      }
    }
);
    chart.render();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
