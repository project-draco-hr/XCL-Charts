{
  try {
    float sum=0.0f;
    int count=chartData.size();
    for (int i=0; i < count; i++) {
      Thread.sleep(150);
      ArrayList<PieData> animationData=new ArrayList<PieData>();
      sum=0.0f;
      for (int j=0; j <= i; j++) {
        animationData.add(chartData.get(j));
        sum=(float)MathHelper.getInstance().add(sum,chartData.get(j).getPercentage());
      }
      animationData.add(new PieData("","",MathHelper.getInstance().sub(100.0f,sum),Color.argb(1,0,0,0)));
      chart.setDataSource(animationData);
      if (count - 1 == i) {
        chart.ActiveListenItemClick();
        chart.showClikedFocus();
        chart.disablePanMode();
        PlotLegend legend=chart.getPlotLegend();
        legend.show();
        legend.setHorizontalAlign(XEnum.HorizontalAlign.CENTER);
        legend.setVerticalAlign(XEnum.VerticalAlign.BOTTOM);
        legend.showBox();
      }
      postInvalidate();
    }
  }
 catch (  Exception e) {
    Thread.currentThread().interrupt();
  }
}
