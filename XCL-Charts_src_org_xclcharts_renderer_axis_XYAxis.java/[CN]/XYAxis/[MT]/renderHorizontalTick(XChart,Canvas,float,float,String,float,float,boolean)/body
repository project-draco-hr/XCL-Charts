{
  if (false == isShow())   return;
  float marksStartX=centerX;
  float markeStopX=centerX;
  float labelStartX=labelX;
  float labelStartY=labelY;
switch (getHorizontalTickAlign()) {
case LEFT:
{
      if (isShowTickMarks()) {
        marksStartX=MathHelper.getInstance().sub(centerX,getTickMarksLength());
        markeStopX=centerX;
      }
      if (this.isShowAxisLabels())       labelStartX=MathHelper.getInstance().sub(marksStartX,getTickLabelMargin());
      break;
    }
case CENTER:
{
    if (isShowTickMarks()) {
      marksStartX=MathHelper.getInstance().sub(centerX,getTickMarksLength() / 2);
      markeStopX=MathHelper.getInstance().add(centerX,getTickMarksLength() / 2);
    }
    break;
  }
case RIGHT:
if (isShowTickMarks()) {
  marksStartX=centerX;
  markeStopX=MathHelper.getInstance().add(centerX,getTickMarksLength());
}
if (this.isShowAxisLabels()) labelStartX=MathHelper.getInstance().add(markeStopX,getTickLabelMargin());
break;
default :
break;
}
if (isShowTickMarks() && isTickVisible) {
canvas.drawLine(marksStartX,centerY,MathHelper.getInstance().add(markeStopX,this.getAxisPaint().getStrokeWidth() / 2),centerY,getTickMarksPaint());
}
if (isShowAxisLabels()) {
int textHeight=DrawHelper.getInstance().getPaintFontHeight(getTickLabelPaint());
textHeight/=4;
if (Align.LEFT == getHorizontalTickAlign()) {
float width=0.0f;
if (isShowTickMarks()) {
width=markeStopX - xchart.getLeft();
}
 else {
width=MathHelper.getInstance().sub(xchart.getPlotArea().getLeft(),xchart.getLeft());
}
renderLeftAxisTickMaskLabel(canvas,labelStartX,labelStartY + textHeight,text,width);
}
 else {
DrawHelper.getInstance().drawRotateText(getFormatterLabel(text),labelStartX,labelStartY + textHeight,getTickLabelRotateAngle(),canvas,getTickLabelPaint());
}
}
}
