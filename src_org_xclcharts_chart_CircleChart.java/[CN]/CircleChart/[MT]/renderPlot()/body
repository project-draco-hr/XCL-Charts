{
  try {
    float cirX=plotArea.getCenterX();
    float cirY=plotArea.getCenterY();
    float radius=getRadius();
    float arcLeft=cirX - radius;
    float arcTop=cirY - radius;
    float arcRight=cirX + radius;
    float arcBottom=cirY + radius;
    RectF arcRF0=new RectF(arcLeft,arcTop,arcRight,arcBottom);
    Paint paintArc=new Paint();
    paintArc.setAntiAlias(true);
    float currentAgent=0.0f;
    DrawHelper dw=new DrawHelper();
    int infoHeight=dw.getPaintFontHeight(mPaintDataInfo);
    int LabelHeight=dw.getPaintFontHeight(getLabelsPaint());
    int textHeight=LabelHeight + infoHeight;
    for (    PieData cData : mDataSet) {
      paintArc.setColor(cData.getSliceColor());
      if (XEnum.CircleDisplayType.HALF == mDisplayType) {
        setInitialAngle(180);
        drawPercent(mPaintBgCircle,cirX,cirY,radius,180f,180f);
        drawPercent(mPaintFillCircle,cirX,cirY,(float)(Math.round(radius * 0.9)),180f,180);
        currentAgent=(int)Math.round(180 * (cData.getPercentage() / 100));
        drawPercent(paintArc,cirX,cirY,radius,180f,currentAgent);
        drawPercent(mPaintFillCircle,cirX,cirY,(float)(Math.round(radius * 0.8)),180f,180);
        this.mCanvas.drawText(cData.getLabel(),cirX,cirY - textHeight,getLabelsPaint());
        this.mCanvas.drawText(mDataInfo,cirX,cirY - infoHeight,mPaintDataInfo);
      }
 else {
        currentAgent=cData.getSliceAgent();
        this.mCanvas.drawCircle(cirX,cirY,radius,mPaintBgCircle);
        this.mCanvas.drawCircle(cirX,cirY,(float)(Math.round(radius * 0.9)),mPaintFillCircle);
        mCanvas.drawArc(arcRF0,mOffsetAgent,currentAgent,true,paintArc);
        this.mCanvas.drawCircle(cirX,cirY,(float)(Math.round(radius * 0.8)),mPaintFillCircle);
        this.mCanvas.drawText(cData.getLabel(),cirX,cirY,getLabelsPaint());
        if (mDataInfo.length() > 0)         this.mCanvas.drawText(mDataInfo,cirX,cirY + LabelHeight,mPaintDataInfo);
      }
      break;
    }
  }
 catch (  Exception e) {
  }
}
