{
  try {
    chart.setPadding(getChartTop(),getChartBottom(),getChartLeft(),getChartRight());
    chart.setChartDirection(XEnum.Direction.HORIZONTAL);
    chart.setDataSource(chartData);
    chart.setCategories(chartLabels);
    chart.getDataAxis().setAxisMax(50);
    chart.getDataAxis().setAxisMin(10);
    chart.getDataAxis().setAxisSteps(10);
    chart.getCategoryAxis().setTickLabelRotateAgent(-45f);
    chart.setTitle("????????????????????????");
    chart.addSubtitle("(XCL-Charts Demo)");
    chart.getLegend().setLeftLegend("??????");
    chart.getLegend().setLowerLegend("?????????");
    chart.getPlotGrid().showHorizontalLines();
    chart.getPlotGrid().showVerticalLines();
    chart.getPlotGrid().showEvenRowBgColor();
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        Double tmp=Double.parseDouble(value);
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(tmp).toString();
        return (label + "???");
      }
    }
);
    chart.getBar().setItemLabelVisible(true);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0.00");
        String label=df.format(value).toString();
        return label;
      }
    }
);
    chart.setAxis3DBaseColor((int)Color.rgb(132,162,197));
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
  }
}
