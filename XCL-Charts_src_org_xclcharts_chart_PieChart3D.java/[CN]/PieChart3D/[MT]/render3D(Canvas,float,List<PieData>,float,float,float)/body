{
  if (null == chartDataSource)   return false;
  float offsetAngle=initOffsetAngle;
  float currentAngle=0.0f;
  float newRadius=0.0f;
  int size=0;
  for (int i=0; i < mRender3DLevel; i++) {
    canvas.save(Canvas.MATRIX_SAVE_FLAG);
    canvas.translate(0,mRender3DLevel - i);
    size=chartDataSource.size();
    for (int j=0; j < size; j++) {
      PieData cData=chartDataSource.get(j);
      if (null == cData)       continue;
      currentAngle=cData.getSliceAngle();
      if (!validateAngle(currentAngle))       continue;
      geArcPaint().setColor(cData.getSliceColor());
      if (cData.getSelected()) {
        newRadius=div(radius,getSelectedOffset());
        PointF point=MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,newRadius,add(offsetAngle,div(currentAngle,2f)));
        initRectF("mRectF",sub(point.x,radius),sub(point.y,radius),add(point.x,radius),add(point.y,radius));
        canvas.drawArc(mRectF,offsetAngle,currentAngle,true,geArcPaint());
      }
 else {
        canvas.drawArc(mArcRF0,offsetAngle,currentAngle,true,geArcPaint());
      }
      offsetAngle=add(offsetAngle,currentAngle);
    }
    canvas.restore();
    offsetAngle=initOffsetAngle;
  }
  return true;
}
