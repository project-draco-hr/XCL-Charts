{
  try {
    float cirX=plotArea.getCenterX();
    float cirY=plotArea.getCenterY();
    float radius=getRadius();
    float arcLeft=sub(cirX,radius);
    float arcTop=sub(cirY,radius);
    float arcRight=add(cirX,radius);
    float arcBottom=add(cirY,radius);
    RectF arcRF0=new RectF(arcLeft,arcTop,arcRight,arcBottom);
    Paint paintArc=new Paint();
    paintArc.setAntiAlias(true);
    float currentAngle=0.0f;
    int infoHeight=DrawHelper.getInstance().getPaintFontHeight(getDataInfoPaint());
    int LabelHeight=DrawHelper.getInstance().getPaintFontHeight(getLabelPaint());
    int textHeight=LabelHeight + infoHeight;
    for (    PieData cData : mDataSet) {
      paintArc.setColor(cData.getSliceColor());
      if (XEnum.CircleType.HALF == mDisplayType) {
        setInitialAngle(180);
        float hRadius=this.getWidth() / 2.f;
        float hCirY=this.getBottom();
        if (this.isShowBorder()) {
          hRadius-=this.getBorderWidth();
          hCirY-=this.getBorderWidth() / 2;
        }
        float oRadius=MathHelper.getInstance().round(mul(hRadius,moRadius),2);
        float iRadius=MathHelper.getInstance().round(mul(hRadius,miRadius),2);
        if (isShowInnerBG()) {
          drawPercent(canvas,getBgCirclePaint(),cirX,hCirY,hRadius,180f,180f);
        }
 else {
          oRadius=iRadius=hRadius;
        }
        if (isShowInnerFill()) {
          drawPercent(canvas,getFillCirclePaint(),cirX,hCirY,oRadius,180f,180f);
        }
        float per=(float)cData.getPercentage();
        currentAngle=MathHelper.getInstance().round(mul(180f,div(per,100f)),2);
        drawPercent(canvas,paintArc,cirX,hCirY,hRadius,180f,currentAngle);
        if (isShowInnerFill()) {
          drawPercent(canvas,getFillCirclePaint(),cirX,hCirY,iRadius,180f,180f);
        }
        if ("" != cData.getLabel()) {
          canvas.drawText(cData.getLabel(),cirX,sub(hCirY,textHeight),getLabelPaint());
        }
        if ("" != mDataInfo)         canvas.drawText(mDataInfo,cirX,hCirY - infoHeight,getDataInfoPaint());
      }
 else {
        currentAngle=cData.getSliceAngle();
        if (isShowInnerBG())         canvas.drawCircle(cirX,cirY,radius,getBgCirclePaint());
        if (isShowInnerFill())         canvas.drawCircle(cirX,cirY,MathHelper.getInstance().round(mul(radius,moRadius),2),getFillCirclePaint());
        canvas.drawArc(arcRF0,mOffsetAngle,currentAngle,true,paintArc);
        if (isShowInnerFill())         canvas.drawCircle(cirX,cirY,MathHelper.getInstance().round(mul(radius,miRadius),2),getFillCirclePaint());
        if ("" != cData.getLabel())         canvas.drawText(cData.getLabel(),cirX,getCirY(cirY,LabelHeight),getLabelPaint());
        if ("" != mDataInfo)         canvas.drawText(mDataInfo,cirX,add(cirY,infoHeight),getDataInfoPaint());
      }
      break;
    }
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
  }
  return true;
}
