{
  try {
    float cirX=plotArea.getCenterX();
    float cirY=plotArea.getCenterY();
    float radius=getRadius();
    float arcLeft=sub(cirX,radius);
    float arcTop=sub(cirY,radius);
    float arcRight=add(cirX,radius);
    float arcBottom=add(cirY,radius);
    RectF arcRF0=new RectF(arcLeft,arcTop,arcRight,arcBottom);
    Paint paintArc=new Paint();
    paintArc.setAntiAlias(true);
    float currentAgent=0.0f;
    int infoHeight=DrawHelper.getInstance().getPaintFontHeight(mPaintDataInfo);
    int LabelHeight=DrawHelper.getInstance().getPaintFontHeight(getLabelPaint());
    int textHeight=LabelHeight + infoHeight;
    for (    PieData cData : mDataSet) {
      paintArc.setColor(cData.getSliceColor());
      if (XEnum.CircleType.HALF == mDisplayType) {
        setInitialAngle(180);
        drawPercent(canvas,mPaintBgCircle,cirX,cirY,radius,180f,180f);
        drawPercent(canvas,mPaintFillCircle,cirX,cirY,MathHelper.getInstance().round(mul(radius,0.9f),2),180f,180f);
        float per=(float)cData.getPercentage();
        currentAgent=MathHelper.getInstance().round(mul(180f,div(per,100f)),2);
        drawPercent(canvas,paintArc,cirX,cirY,radius,180f,currentAgent);
        drawPercent(canvas,mPaintFillCircle,cirX,cirY,MathHelper.getInstance().round(mul(radius,0.8f),2),180f,180f);
        canvas.drawText(cData.getLabel(),cirX,cirY - textHeight,getLabelPaint());
        canvas.drawText(mDataInfo,cirX,cirY - infoHeight,mPaintDataInfo);
      }
 else {
        currentAgent=cData.getSliceAgent();
        canvas.drawCircle(cirX,cirY,radius,mPaintBgCircle);
        canvas.drawCircle(cirX,cirY,MathHelper.getInstance().round(mul(radius,0.9f),2),mPaintFillCircle);
        canvas.drawArc(arcRF0,mOffsetAgent,currentAgent,true,paintArc);
        canvas.drawCircle(cirX,cirY,MathHelper.getInstance().round(mul(radius,0.8f),2),mPaintFillCircle);
        canvas.drawText(cData.getLabel(),cirX,cirY,getLabelPaint());
        if (mDataInfo.length() > 0)         canvas.drawText(mDataInfo,cirX,add(cirY,LabelHeight),mPaintDataInfo);
      }
      break;
    }
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
  }
}
