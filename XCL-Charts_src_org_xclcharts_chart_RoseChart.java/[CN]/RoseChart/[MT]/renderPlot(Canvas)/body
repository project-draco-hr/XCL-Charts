{
  float cirX=plotArea.getCenterX();
  float cirY=plotArea.getCenterY();
  float radius=getRadius();
  float percentage=0.0f;
  float newRaidus=0.0f;
  List<PieData> chartDataSource=this.getDataSource();
  if (null == chartDataSource || chartDataSource.size() == 0) {
    Log.e(TAG,"???????????????.");
    return false;
  }
  if (mShowInner)   canvas.drawCircle(cirX,cirY,radius,getInnerPaint());
  drawBGCircle(canvas);
  drawBGLines(canvas);
  int totalAngle=360 - mIntervalAngle * chartDataSource.size();
  percentage=totalAngle / chartDataSource.size();
  percentage=div(mul(percentage,100),100);
  float labelRadius=0.f;
  if (mShowOuterLabels) {
    labelRadius=radius + DrawHelper.getInstance().getPaintFontHeight(this.getLabelPaint());
  }
 else {
    labelRadius=radius - radius / 2 / 2;
  }
  for (  PieData cData : chartDataSource) {
    geArcPaint().setColor(cData.getSliceColor());
    double p=cData.getPercentage() / 100;
    newRaidus=mul(radius,dtof(p));
    newRaidus=div(mul(newRaidus,100),100);
    PointF pointbg=MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,radius,mOffsetAngle + mIntervalAngle + percentage / 2);
    if (mShowBgLines) {
    }
    RectF nRF=new RectF(sub(cirX,newRaidus),sub(cirY,newRaidus),add(cirX,newRaidus),add(cirY,newRaidus));
    canvas.drawArc(nRF,mOffsetAngle + mIntervalAngle,percentage,true,geArcPaint());
    String label=cData.getLabel();
    if ("" != label) {
      PointF point=MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,labelRadius,mOffsetAngle + mIntervalAngle + percentage / 2);
      DrawHelper.getInstance().drawRotateText(label,point.x,point.y,cData.getItemLabelRotateAngle(),canvas,getLabelPaint());
    }
    mOffsetAngle=add(add(mOffsetAngle,percentage),mIntervalAngle);
  }
  return true;
}
