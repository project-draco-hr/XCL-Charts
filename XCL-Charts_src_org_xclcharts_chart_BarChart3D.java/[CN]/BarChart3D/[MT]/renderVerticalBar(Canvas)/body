{
  renderVerticalBarDataAxis(canvas);
  renderVerticalBarCategoryAxis(canvas);
  float currentX=0.0f;
  float initX=currentX=plotArea.getLeft();
  List<String> dataSet=categoryAxis.getDataSet();
  if (null == dataSet)   return;
  float XSteps=div(plotArea.getWidth(),(dataSet.size() + 1));
  mBar3D.render3DXAxis(plotArea.getLeft(),plotArea.getBottom(),plotArea.getRight(),plotArea.getBottom(),canvas);
  List<BarData> chartDataSource=this.getDataSource();
  if (null == chartDataSource)   return;
  int barNumber=getDatasetSize(chartDataSource);
  int currNumber=0;
  List<Integer> ret=mBar3D.getBarWidthAndMargin(XSteps,barNumber);
  int barWidth=ret.get(0);
  int barInnerMargin=ret.get(1);
  int labelBarUseWidth=barNumber * barWidth + (barNumber - 1) * barInnerMargin;
  for (int i=0; i < barNumber; i++) {
    currentX=add(initX,mul((i + 1),XSteps));
    BarData bd=chartDataSource.get(i);
    List<Double> barValues=bd.getDataSet();
    if (null == barValues)     continue;
    List<Integer> barDataColor=bd.getDataColor();
    int barDefualtColor=bd.getColor();
    mBar3D.getBarPaint().setColor(barDefualtColor);
    for (int j=0; j < barValues.size(); j++) {
      Double bv=barValues.get(j);
      setBarDataColor(mBar3D.getBarPaint(),barDataColor,j,barDefualtColor);
      float tlen=(float)MathHelper.getInstance().sub(bv,dataAxis.getAxisMin());
      float valuePostion=div(tlen,dataAxis.getAxisRange());
      valuePostion=mul(plotArea.getHeight(),valuePostion);
      float drawBarStartX=sub(add(initX,mul((j + 1),XSteps)),labelBarUseWidth / 2);
      drawBarStartX=add(drawBarStartX,(barWidth + barInnerMargin) * currNumber);
      float drawBarEndX=add(drawBarStartX,barWidth);
      mBar3D.renderVertical3DBar(drawBarStartX,sub(plotArea.getBottom(),valuePostion),drawBarEndX,plotArea.getBottom(),mBar3D.getBarPaint().getColor(),canvas);
      mBar3D.renderBarItemLabel(getFormatterItemLabel(bv),add(drawBarStartX,barWidth / 2),sub(plotArea.getBottom(),valuePostion),canvas);
    }
    currNumber++;
  }
  plotLegend.renderBarKey(canvas,this.getDataSource());
}
