{
  renderHorizontalBarDataAxis(canvas);
  renderHorizontalBarLabelAxis(canvas);
  float YSteps=getHorizontalYSteps();
  int barNumber=mDataSet.size();
  int currNumber=0;
  List<Integer> ret=mFlatBar.getBarHeightAndMargin(YSteps,barNumber);
  int barHeight=ret.get(0);
  int barInnerMargin=ret.get(1);
  int labelBarUseHeight=barNumber * barHeight + (barNumber - 1) * barInnerMargin;
  float scrWidth=getAxisScreenWidth();
  float valueWidth=(float)dataAxis.getAxisRange();
  for (int i=0; i < barNumber; i++) {
    BarData bd=mDataSet.get(i);
    List<Double> barValues=bd.getDataSet();
    mFlatBar.getBarPaint().setColor(bd.getColor());
    int k=1;
    for (    Double bv : barValues) {
      float currLableY=plotArea.getBottom() - (k) * YSteps;
      float drawBarButtomY=currLableY + labelBarUseHeight / 2;
      drawBarButtomY=drawBarButtomY - (barHeight + barInnerMargin) * currNumber;
      float drawBarTopY=drawBarButtomY - barHeight;
      float valuePostion=(float)(scrWidth * ((bv - dataAxis.getAxisMin()) / valueWidth));
      mFlatBar.renderBar(plotArea.getLeft(),drawBarButtomY,plotArea.getLeft() + valuePostion,drawBarTopY,canvas);
      mFlatBar.renderBarItemLabel(getFormatterItemLabel(bv),plotArea.getLeft() + valuePostion,(float)Math.round(drawBarButtomY - barHeight / 2),canvas);
      k++;
    }
    currNumber++;
  }
  dataAxis.renderAxis(canvas,plotArea.getLeft(),plotArea.getBottom(),plotArea.getLeft(),plotArea.getTop());
  categoryAxis.renderAxis(canvas,plotArea.getLeft(),plotArea.getBottom(),plotArea.getRight(),plotArea.getBottom());
  renderDataKey(canvas);
  renderHorizontalDesirelinesDataAxis(canvas);
}
