{
  int count=lstPathPoints.size();
  if (count < 3)   return false;
  if (count == 3) {
    if (null == bezierPath)     bezierPath=new Path();
    bezierPath.moveTo(lstPathPoints.get(0).x,plotArea.getBottom());
    bezierPath.lineTo(lstPathPoints.get(0).x,lstPathPoints.get(0).y);
    PointF ctl3=PointHelper.percent(lstPathPoints.get(1),0.5f,lstPathPoints.get(2),0.8f);
    bezierPath.quadTo(ctl3.x,ctl3.y,lstPathPoints.get(2).x,lstPathPoints.get(2).y);
    bezierPath.lineTo(lstPathPoints.get(2).x,plotArea.getBottom());
    bezierPath.close();
    paintAreaFill.setColor(areaData.getAreaFillColor());
    paintAreaFill.setAlpha(this.mAreaAlpha);
    canvas.drawPath(bezierPath,paintAreaFill);
    bezierPath.reset();
    return true;
  }
  bezierPath.moveTo(plotArea.getLeft(),plotArea.getBottom());
  for (int i=0; i < count; i++) {
    if (i < 3)     continue;
    CurveHelper.curve3(lstPathPoints.get(i - 2),lstPathPoints.get(i - 1),lstPathPoints.get(i - 3),lstPathPoints.get(i),mBezierControls);
    bezierPath.cubicTo(mBezierControls[0].x,mBezierControls[0].y,mBezierControls[1].x,mBezierControls[1].y,lstPathPoints.get(i - 1).x,lstPathPoints.get(i - 1).y);
  }
  PointF stop=lstPathPoints.get(count - 1);
  if (Float.compare(stop.y,plotArea.getBottom()) == 0) {
    bezierPath.lineTo(stop.x,stop.y);
  }
 else {
    CurveHelper.curve3(lstPathPoints.get(count - 2),stop,lstPathPoints.get(count - 3),stop,mBezierControls);
    bezierPath.cubicTo(mBezierControls[0].x,mBezierControls[0].y,mBezierControls[1].x,mBezierControls[1].y,stop.x,stop.y);
  }
  bezierPath.close();
  paintAreaFill.setColor(areaData.getAreaFillColor());
  paintAreaFill.setAlpha(this.mAreaAlpha);
  canvas.drawPath(bezierPath,paintAreaFill);
  bezierPath.reset();
  return true;
}
