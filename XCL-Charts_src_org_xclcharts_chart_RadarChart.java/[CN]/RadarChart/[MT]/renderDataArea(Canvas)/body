{
  float cirX=plotArea.getCenterX();
  float cirY=plotArea.getCenterY();
  int j=0;
  for (  RadarData lineData : mDataSet) {
    List<Double> dataset=lineData.getLinePoint();
    int dataSize=dataset.size();
    if (dataSize < 3) {
      Log.e(TAG,"?????????????????????????????????????????????.");
      continue;
    }
    Float[] arrayDataX=new Float[dataSize];
    Float[] arrayDataY=new Float[dataSize];
    int i=0;
    for (    Double data : dataset) {
      if (Double.compare(data,0.d) == 0) {
        arrayDataX[i]=plotArea.getCenterX();
        arrayDataY[i]=plotArea.getCenterY();
        i++;
        continue;
      }
      Double per=(data - dataAxis.getAxisMin()) / dataAxis.getAxisRange();
      float curRadius=(float)(getRadius() * per);
      MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,curRadius,mArrayLabelAgent[i]);
      arrayDataX[i]=MathHelper.getInstance().getPosX();
      arrayDataY[i]=MathHelper.getInstance().getPosY();
      i++;
    }
switch (lineData.getAreaStyle()) {
case FILL:
      drawDataPath(canvas,lineData,arrayDataX,arrayDataY,j);
    break;
case STROKE:
  renderDataLine(canvas,lineData,arrayDataX,arrayDataY,j);
break;
default :
Log.e(TAG,"??????????????????.");
}
j++;
}
}
