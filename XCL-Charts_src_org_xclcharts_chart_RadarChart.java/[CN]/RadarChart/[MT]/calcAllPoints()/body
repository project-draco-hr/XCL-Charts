{
  float cirX=plotArea.getCenterX();
  float cirY=plotArea.getCenterY();
  int labelsCount=getPlotAgentNumber();
  int dataAxisTickCount=getAxisTickCount();
  float pAngle=MathHelper.getInstance().div(360f,labelsCount);
  float initOffsetAgent=MathHelper.getInstance().sub(270f,pAngle);
  float avgRadius=MathHelper.getInstance().div(getRadius(),(dataAxisTickCount - 1));
  float offsetAgent=0.0f;
  mArrayDotX=new Float[dataAxisTickCount][labelsCount];
  mArrayDotY=new Float[dataAxisTickCount][labelsCount];
  mArrayLabelAgent=new Float[labelsCount];
  mArrayLabelX=new Float[dataAxisTickCount][labelsCount];
  mArrayLabelY=new Float[dataAxisTickCount][labelsCount];
  mArrayRadius=new Float[dataAxisTickCount];
  float labelHeight=DrawHelper.getInstance().getPaintFontHeight(getLabelPaint());
  float labelRadius=this.getRadius() + labelHeight + mLabelOffset;
  float currAgent=0.0f;
  for (int i=0; i < dataAxisTickCount; i++) {
    mArrayRadius[i]=avgRadius * i;
    for (int j=0; j < labelsCount; j++) {
      offsetAgent=MathHelper.getInstance().add(initOffsetAgent,pAngle * j);
      currAgent=MathHelper.getInstance().add(offsetAgent,pAngle);
      if (Float.compare(0.f,mArrayRadius[i]) == 0) {
        mArrayDotX[i][j]=cirX;
        mArrayDotY[i][j]=cirY;
      }
 else {
        MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,mArrayRadius[i],currAgent);
        mArrayDotX[i][j]=MathHelper.getInstance().getPosX();
        mArrayDotY[i][j]=MathHelper.getInstance().getPosY();
      }
      if (0 == i)       mArrayLabelAgent[j]=currAgent;
      MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,labelRadius,currAgent);
      mArrayLabelX[i][j]=MathHelper.getInstance().getPosX();
      mArrayLabelY[i][j]=MathHelper.getInstance().getPosY();
    }
  }
}
