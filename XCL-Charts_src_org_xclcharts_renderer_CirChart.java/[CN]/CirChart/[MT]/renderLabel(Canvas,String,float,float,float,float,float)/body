{
  if (XEnum.SliceLabelPosition.HIDE == mLabelPosition)   return;
  float calcRadius=0.0f;
  float calcAgent=0.0f;
  calcAgent=offsetAgent + curretAgentt / 2;
  if (calcAgent == 0) {
    Log.e(TAG,"??????????????????????????????0.");
    return;
  }
  if (XEnum.SliceLabelPosition.INNER == mLabelPosition) {
    calcRadius=radius - radius / 2;
    MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,calcRadius,calcAgent);
    canvas.drawText(text,MathHelper.getInstance().getPosX(),MathHelper.getInstance().getPosY(),mPaintLabel);
  }
 else   if (XEnum.SliceLabelPosition.OUTSIDE == mLabelPosition) {
    calcRadius=radius + radius / 10;
    MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,calcRadius,calcAgent);
    canvas.drawText(text,MathHelper.getInstance().getPosX(),MathHelper.getInstance().getPosY(),mPaintLabel);
  }
 else   if (XEnum.SliceLabelPosition.LINE == mLabelPosition) {
    calcRadius=radius - radius / 4;
    MathHelper.getInstance().calcArcEndPointXY(cirX,cirY,calcRadius,calcAgent);
    float startX=MathHelper.getInstance().getPosX();
    float startY=MathHelper.getInstance().getPosY();
    calcRadius=radius / 2;
    MathHelper.getInstance().calcArcEndPointXY(startX,startY,calcRadius,calcAgent);
    float stopX=MathHelper.getInstance().getPosX();
    float stopY=MathHelper.getInstance().getPosY();
    canvas.drawLine(startX,startY,stopX,stopY,mPaintLabelLine);
    float endX=0.0f;
    if (stopX + mLabelBrokenLineLength > cirX) {
      mPaintLabel.setTextAlign(Align.LEFT);
      endX=stopX + mLabelBrokenLineLength;
    }
 else     if (stopX - mLabelBrokenLineLength < cirX) {
      mPaintLabel.setTextAlign(Align.RIGHT);
      endX=stopX - mLabelBrokenLineLength;
    }
 else     if (stopX == cirX) {
      mPaintLabel.setTextAlign(Align.CENTER);
      endX=stopX;
    }
    canvas.drawLine(stopX,stopY,endX,stopY,mPaintLabelLine);
    canvas.drawText(text,endX,stopY,mPaintLabel);
  }
 else {
    Log.e(TAG,"???????????????????????????.");
    return;
  }
}
