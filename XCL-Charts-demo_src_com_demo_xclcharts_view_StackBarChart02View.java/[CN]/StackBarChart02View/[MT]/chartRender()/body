{
  try {
    chart.setChartRange(0.0f,0.0f,getScreenWidth(),getScreenHeight());
    chart.setChartDirection(XEnum.Direction.HORIZONTAL);
    if (chart.isVerticalScreen()) {
      chart.setPadding(15,20,10,5);
    }
 else {
      chart.setPadding(25,20,18,5);
    }
    chart.setCategories(chartLabels);
    chart.setDataSource(BarDataSet);
    chart.getDataAxis().setAxisMax(1200);
    chart.getDataAxis().setAxisMin(100);
    chart.getDataAxis().setAxisSteps(100);
    chart.getCategoryAxis().setTickLabelRotateAgent(-45f);
    chart.setTitle("?????????????????????????????????");
    chart.addSubtitle("(XCL-Charts Demo)");
    chart.setTitleAlign(XEnum.ChartTitleAlign.CENTER);
    chart.getLegend().setLowerLegend("?????????(W)");
    chart.getPlotGrid().showVerticalLines();
    chart.getPlotGrid().setVerticalLineStyle(XEnum.LineStyle.DOT);
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        DecimalFormat df=new DecimalFormat("#0");
        Double tmp=Double.parseDouble(value);
        String label=df.format(tmp).toString();
        return label;
      }
    }
);
    chart.getCategoryAxis().getAxisTickLabelPaint().setColor((int)Color.rgb(1,188,242));
    chart.getBar().setItemLabelVisible(true);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0.00");
        String label=df.format(value).toString();
        return label;
      }
    }
);
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
  }
}
