{
  float offsetX=mTranslateXY[0];
  float offsetY=mTranslateXY[1];
  initMoveXY();
  renderVerticalDataAxisLine(canvas);
  renderVerticalDataAxisRightLine(canvas);
  renderVerticalCategoryAxisLine(canvas);
  canvas.save();
  canvas.clipRect(this.getLeft(),this.getTop(),this.getRight(),this.getBottom());
  if (XEnum.PanMode.VERTICAL == this.getPlotPanMode() || XEnum.PanMode.FREE == this.getPlotPanMode()) {
    float yMargin=getDrawClipVerticalYMargin();
    canvas.save();
    canvas.clipRect(plotArea.getLeft(),plotArea.getTop() - yMargin,plotArea.getRight(),plotArea.getBottom() + yMargin);
    canvas.translate(0,offsetY);
    renderVerticalDataAxis(canvas);
    canvas.restore();
  }
 else {
    renderVerticalDataAxis(canvas);
  }
  if (XEnum.PanMode.HORIZONTAL == this.getPlotPanMode() || XEnum.PanMode.FREE == this.getPlotPanMode()) {
    float xMargin=getDrawClipVerticalXMargin();
    canvas.save();
    canvas.clipRect(plotArea.getLeft() - xMargin,plotArea.getTop(),plotArea.getRight() + xMargin,this.getBottom());
    canvas.translate(offsetX,0);
    renderVerticalCategoryAxis(canvas);
    canvas.restore();
  }
 else {
    renderVerticalCategoryAxis(canvas);
  }
  canvas.save();
  if (isShowRightAxis()) {
    canvas.clipRect(plotArea.getLeft(),plotArea.getTop(),plotArea.getRight(),plotArea.getBottom());
  }
 else {
    canvas.clipRect(plotArea.getLeft(),plotArea.getTop(),this.getRight(),plotArea.getBottom());
  }
  canvas.save();
  canvas.translate(mMoveX,mMoveY);
  if (renderPlot(canvas) == true) {
  }
  canvas.restore();
  canvas.restore();
  canvas.restore();
  if (XEnum.PanMode.VERTICAL == this.getPlotPanMode() || XEnum.PanMode.FREE == this.getPlotPanMode()) {
    float yMargin=getDrawClipVerticalYMargin();
    canvas.save();
    canvas.clipRect(this.getLeft(),plotArea.getTop() - yMargin,this.getRight(),plotArea.getBottom() + yMargin);
    canvas.translate(0,offsetY);
    renderDataAxisTick(canvas);
    canvas.restore();
  }
 else {
    renderDataAxisTick(canvas);
  }
  if (XEnum.PanMode.HORIZONTAL == this.getPlotPanMode() || XEnum.PanMode.FREE == this.getPlotPanMode()) {
    float xMargin=getDrawClipVerticalXMargin();
    canvas.save();
    canvas.clipRect(plotArea.getLeft() - xMargin,plotArea.getTop(),plotArea.getRight() + xMargin,this.getBottom());
    canvas.translate(offsetX,0);
    renderCategoryAxisTick(canvas);
    canvas.restore();
  }
 else {
    renderCategoryAxisTick(canvas);
  }
  if (null != plotLegend)   plotLegend.renderPointKey(canvas,mDataset);
  execGC();
  return true;
}
