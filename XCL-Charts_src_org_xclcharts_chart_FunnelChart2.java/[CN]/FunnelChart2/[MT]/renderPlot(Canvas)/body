{
  if (mDataSet.size() == 0)   return;
  float fHalfTopWidth=div(plotArea.getPlotWidth(),5);
  float funnelTopWidth=mul(fHalfTopWidth,2);
  float funnelTopStartX=sub(plotArea.getCenterX(),fHalfTopWidth);
  float funnelTopStopX=add(plotArea.getCenterX(),fHalfTopWidth);
  Path cPath=new Path();
  cPath.moveTo(plotArea.getLeft(),plotArea.getBottom());
  cPath.lineTo(plotArea.getRight(),plotArea.getBottom());
  cPath.lineTo(funnelTopStopX,plotArea.getTop());
  cPath.lineTo(funnelTopStartX,plotArea.getTop());
  cPath.close();
  getPaint().setStyle(Style.FILL);
  getPaint().setColor(mDataSet.get(0).getColor());
  canvas.drawPath(cPath,getPaint());
  List<PointF> lstTop=new ArrayList<PointF>();
  List<PointF> lstCenter=new ArrayList<PointF>();
  List<PointF> lstRight=new ArrayList<PointF>();
  int dataSize=mDataSet.size();
  float fx=funnelTopStartX;
  float fy=plotArea.getTop();
  for (int i=0; i < dataSize; i++) {
    fx=add(fx,mul(funnelTopWidth,mDataSet.get(i).getPercentData()));
    lstTop.add(new PointF(fx,fy));
  }
  fy=plotArea.getBottom();
  float fSpaddWidth=div(sub(plotArea.getPlotWidth(),funnelTopWidth),2);
  float rx, leftX, rightX, cx;
  for (int i=0; i < dataSize; i++) {
    fy=sub(fy,mul(plotArea.getPlotHeight(),mDataSet.get(i).getBaseData()));
    rx=mul(fSpaddWidth,sub(1,div(fy,plotArea.getPlotHeight())));
    leftX=plotArea.getLeft() + rx;
    rightX=plotArea.getRight() - rx;
    cx=leftX + ((rightX - leftX) * mDataSet.get(i).getPercentData());
    lstCenter.add(new PointF(cx,fy));
  }
  List<Float> lstLabel=new ArrayList<Float>();
  float labelY=0.f;
  float labelX=add(funnelTopStopX,div(fSpaddWidth,2));
  fy=plotArea.getBottom();
  for (int i=0; i < dataSize; i++) {
    fy=sub(fy,mul(plotArea.getPlotHeight(),mDataSet.get(i).getPercentData()));
    lstRight.add(new PointF(plotArea.getRight(),fy));
    if (i == 0) {
      lstLabel.add(sub(plotArea.getBottom(),div(sub(plotArea.getBottom(),fy),2)));
    }
 else {
      labelY=div(sub(fy,lstRight.get(i - 1).y),2);
      labelY=sub(fy,labelY);
      lstLabel.add(labelY);
    }
  }
  Path bezierPath=new Path();
  for (int i=0; i < lstTop.size(); i++) {
    if (i + 1 >= lstTop.size())     continue;
    getPaint().setColor(mDataSet.get(i + 1).getColor());
    bezierPath.moveTo(lstTop.get(i).x,lstTop.get(i).y);
    PointF ctl2=PointHelper.percent(lstTop.get(i),0.7f,lstCenter.get(i),0.5f);
    bezierPath.quadTo(ctl2.x,ctl2.y,lstCenter.get(i).x,lstCenter.get(i).y);
    PointF ctl3=PointHelper.percent(lstCenter.get(i),0.1f,lstRight.get(i),0.9f);
    bezierPath.quadTo(ctl3.x,ctl3.y,lstRight.get(i).x,lstRight.get(i).y);
    bezierPath.lineTo(funnelTopStopX,plotArea.getTop());
    bezierPath.close();
    canvas.drawPath(bezierPath,getPaint());
    bezierPath.reset();
  }
  cPath.reset();
  cPath.moveTo(plotArea.getRight(),plotArea.getBottom());
  cPath.lineTo(plotArea.getRight(),plotArea.getTop());
  cPath.lineTo(funnelTopStopX,plotArea.getTop());
  cPath.close();
  getPaint().setColor(mBgColor);
  canvas.drawPath(cPath,getPaint());
  cPath.reset();
  cPath.moveTo(plotArea.getLeft(),plotArea.getTop());
  cPath.lineTo(funnelTopStartX,plotArea.getTop());
  cPath.lineTo(plotArea.getLeft(),plotArea.getBottom());
  cPath.close();
  canvas.drawPath(cPath,getPaint());
  getPaintLabel();
  for (int i=0; i < lstLabel.size(); i++) {
    try {
      canvas.drawText(mDataSet.get(i).getLabel(),labelX,lstLabel.get(i),mPaintLabel);
    }
 catch (    Exception ex) {
    }
  }
}
