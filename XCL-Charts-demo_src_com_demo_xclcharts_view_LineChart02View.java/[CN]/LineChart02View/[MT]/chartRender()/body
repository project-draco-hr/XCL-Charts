{
  try {
    int[] ltrb=getBarLnDefaultSpadding();
    chart.setPadding(DensityUtil.dip2px(getContext(),45),ltrb[1],ltrb[2],ltrb[3]);
    chart.setCategories(labels);
    chart.setDesireLines(mCustomLineDataset);
    chart.getDataAxis().setAxisMax(3500);
    chart.getDataAxis().setAxisSteps(100);
    chart.getDataAxis().setDetailModeSteps(5);
    chart.getPlotGrid().showHorizontalLines();
    chart.setTitle("??????????????????????????????");
    chart.addSubtitle("(XCL-Charts Demo)");
    chart.getDataAxis().getAxisPaint().setStrokeWidth(2);
    chart.getDataAxis().getTickMarksPaint().setStrokeWidth(2);
    chart.getDataAxis().showAxisLabels();
    chart.getCategoryAxis().getAxisPaint().setStrokeWidth(2);
    chart.getCategoryAxis().hideTickMarks();
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        Double tmp=Double.parseDouble(value);
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(tmp).toString();
        return (label);
      }
    }
);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0");
        String label=df.format(value).toString();
        return label;
      }
    }
);
    chart.setLineAxisIntersectVisible(false);
    chart.showDyLine();
    chart.setAxesClosed(false);
    chart.getClipExt().setExtRight(150.f);
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
  }
}
