{
  float XSteps=0.0f, YSteps=0.0f;
  int tickCount=dataAxis.getAixTickCount();
  int labeltickCount=tickCount;
  if (0 == tickCount) {
    Log.e(TAG,"??????????????????0!");
    return;
  }
 else   if (1 == tickCount)   labeltickCount=tickCount - 1;
  float axisX=0.0f, axisY=0.0f, currentX=0.0f, currentY=0.0f;
  double currentTickLabel=0d;
  XEnum.AxisLocation pos=getDataAxisLocation();
switch (pos) {
case LEFT:
case RIGHT:
case VERTICAL_CENTER:
    YSteps=getVerticalYSteps(labeltickCount);
  currentX=axisX=getAxisXPos(pos);
currentY=axisY=plotArea.getBottom();
break;
case TOP:
case BOTTOM:
case HORIZONTAL_CENTER:
XSteps=getVerticalXSteps(labeltickCount);
currentY=axisY=getAxisYPos(pos);
currentX=axisX=plotArea.getLeft();
break;
default :
Log.e(TAG,"????????????????????? .");
}
mLstDataTick.clear();
for (int i=0; i < tickCount + 1; i++) {
switch (pos) {
case LEFT:
case RIGHT:
case VERTICAL_CENTER:
currentY=sub(plotArea.getBottom(),mul(i,YSteps));
drawHorizontalGridLines(canvas,plotArea.getLeft(),plotArea.getRight(),i,tickCount + 1,YSteps,currentY);
currentTickLabel=MathHelper.getInstance().add(dataAxis.getAxisMin(),mul(i,(float)dataAxis.getAxisSteps()));
mLstDataTick.add(new PlotAxisTick(i,axisX,currentY,Double.toString(currentTickLabel)));
break;
case TOP:
case BOTTOM:
case HORIZONTAL_CENTER:
currentX=add(plotArea.getLeft(),mul(i,XSteps));
drawVerticalGridLines(canvas,plotArea.getTop(),plotArea.getBottom(),i,tickCount + 1,XSteps,currentX);
currentTickLabel=MathHelper.getInstance().add(dataAxis.getAxisMin(),mul(i,(float)dataAxis.getAxisSteps()));
mLstDataTick.add(new PlotAxisTick(i,currentX,axisY,Double.toString(currentTickLabel)));
break;
}
}
}
