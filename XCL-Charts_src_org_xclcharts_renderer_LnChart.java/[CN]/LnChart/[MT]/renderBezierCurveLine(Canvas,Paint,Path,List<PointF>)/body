{
  if (null == BezierControls)   BezierControls=new PointF[2];
  paint.setStyle(Style.STROKE);
  int count=lstPoints.size();
  if (count <= 2)   return;
  if (count == 3) {
    if (null == bezierPath)     bezierPath=new Path();
    bezierPath.moveTo(lstPoints.get(0).x,lstPoints.get(0).y);
    PointF ctl3=PointHelper.percent(lstPoints.get(1),0.5f,lstPoints.get(2),0.8f);
    bezierPath.quadTo(ctl3.x,ctl3.y,lstPoints.get(2).x,lstPoints.get(2).y);
    canvas.drawPath(bezierPath,paint);
    bezierPath.reset();
    return;
  }
  float axisMinValue=plotArea.getBottom();
  for (int i=0; i < count; i++) {
    if (i < 3)     continue;
    if (lstPoints.get(i - 1).y >= axisMinValue && lstPoints.get(i).y >= axisMinValue) {
      if (null == bezierPath) {
        bezierPath=new Path();
      }
      bezierPath.reset();
      bezierPath.moveTo(lstPoints.get(i - 2).x,lstPoints.get(i - 2).y);
      if (lstPoints.get(i - 2).y >= axisMinValue) {
        bezierPath.lineTo(lstPoints.get(i - 1).x,lstPoints.get(i - 1).y);
      }
 else {
        CurveHelper.curve3(lstPoints.get(i - 2),lstPoints.get(i - 1),lstPoints.get(i - 3),lstPoints.get(i),BezierControls);
        bezierPath.quadTo(BezierControls[0].x,BezierControls[0].y,lstPoints.get(i - 1).x,lstPoints.get(i - 1).y);
        canvas.drawPath(bezierPath,paint);
        bezierPath.reset();
      }
      canvas.drawLine(lstPoints.get(i - 1).x,lstPoints.get(i - 1).y,lstPoints.get(i).x,lstPoints.get(i).y,paint);
      continue;
    }
    CurveHelper.curve3(lstPoints.get(i - 2),lstPoints.get(i - 1),lstPoints.get(i - 3),lstPoints.get(i),BezierControls);
    renderBezierCurvePath(canvas,paint,bezierPath,lstPoints.get(i - 2),lstPoints.get(i - 1),BezierControls);
  }
  if (count > 3) {
    PointF stop=lstPoints.get(count - 1);
    CurveHelper.curve3(lstPoints.get(count - 2),stop,lstPoints.get(count - 3),stop,BezierControls);
    renderBezierCurvePath(canvas,paint,bezierPath,lstPoints.get(count - 2),lstPoints.get(count - 1),BezierControls);
  }
}
