{
  List<String> dataSet=categoryAxis.getDataSet();
  float XSteps=0.0f, YSteps=0.0f;
  int j=0;
  int tickCount=dataSet.size();
  if (0 == tickCount) {
    Log.e(TAG,"?????????????????????0!");
    return;
  }
 else   if (1 == tickCount) {
    j=1;
  }
  int labeltickCount=getCategoryAxisCount();
  float axisX=0.0f, axisY=0.0f, currentX=0.0f, currentY=0.0f;
  XEnum.AxisLocation pos=getCategoryAxisLocation();
  if (XEnum.AxisLocation.LEFT == pos || XEnum.AxisLocation.RIGHT == pos || XEnum.AxisLocation.VERTICAL_CENTER == pos) {
    YSteps=getVerticalYSteps(labeltickCount);
    currentX=axisX=getAxisXPos(pos);
    currentY=axisY=plotArea.getBottom();
  }
 else {
    XSteps=getVerticalXSteps(labeltickCount);
    currentY=axisY=getAxisYPos(pos);
    currentX=axisX=plotArea.getLeft();
  }
  mLstCateTick.clear();
  for (int i=0; i < tickCount; i++) {
switch (pos) {
case LEFT:
case RIGHT:
case VERTICAL_CENTER:
      currentY=sub(plotArea.getBottom(),j * YSteps);
    drawHorizontalGridLines(canvas,plotArea.getLeft(),plotArea.getRight(),i,tickCount,YSteps,currentY);
  if (!categoryAxis.isShowAxisLabels())   continue;
mLstCateTick.add(new PlotAxisTick(axisX,currentY,dataSet.get(i)));
break;
case TOP:
case BOTTOM:
case HORIZONTAL_CENTER:
currentX=add(plotArea.getLeft(),(j) * XSteps);
drawVerticalGridLines(canvas,plotArea.getTop(),plotArea.getBottom(),i,tickCount,XSteps,currentX);
if (!categoryAxis.isShowAxisLabels()) continue;
mLstCateTick.add(new PlotAxisTick(currentX,axisY,dataSet.get(i)));
break;
}
j++;
}
}
