{
  try {
    int[] ltrb=getBarLnDefaultSpadding();
    chart.setPadding(ltrb[0],ltrb[1],ltrb[2],ltrb[3]);
    chart.setChartDirection(XEnum.Direction.VERTICAL);
    chart.setTitle("Virtual vs Native Oracle RAC Performance");
    chart.addSubtitle("(XCL-Charts Demo)");
    chart.getAxisTitle().setLeftAxisTitle("Orders Per Minute (OPM)");
    chart.getAxisTitle().setRightAxisTitle("Average Response Time (RT)");
    chart.setCategories(chartLabels);
    chart.setDataSource(chartData);
    chart.getDataAxis().setAxisMax(90000);
    chart.getDataAxis().setAxisSteps(10000);
    chart.getDataAxis().setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        double label=Double.parseDouble(value);
        DecimalFormat df=new DecimalFormat("#0");
        return df.format(label).toString();
      }
    }
);
    CategoryAxis categoryAxis=chart.getCategoryAxis();
    categoryAxis.setTickLabelRotateAngle(-15f);
    categoryAxis.getTickLabelPaint().setTextSize(15);
    categoryAxis.getTickLabelPaint().setTextAlign(Align.CENTER);
    categoryAxis.setLabelFormatter(new IFormatterTextCallBack(){
      @Override public String textFormatter(      String value){
        return value;
      }
    }
);
    chart.getBar().setItemLabelVisible(true);
    chart.setItemLabelFormatter(new IFormatterDoubleCallBack(){
      @Override public String doubleFormatter(      Double value){
        DecimalFormat df=new DecimalFormat("#0");
        return df.format(value).toString();
      }
    }
);
    chart.getPlotGrid().showHorizontalLines();
    chart.getPlotGrid().showEvenRowBgColor();
    chart.getPlotGrid().showOddRowBgColor();
    chart.getPlotLegend().hide();
  }
 catch (  Exception e) {
    Log.e(TAG,e.toString());
  }
}
