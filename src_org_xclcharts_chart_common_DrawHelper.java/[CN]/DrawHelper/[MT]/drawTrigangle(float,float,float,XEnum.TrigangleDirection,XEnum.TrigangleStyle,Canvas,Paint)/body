{
  int offset=(int)(baseLine / 2 * Math.tan(60 * Math.PI / 180));
  Path path=new Path();
switch (direction) {
case UP:
    path.moveTo(baseLnCentX - baseLine / 2,baseLnCentY);
  path.lineTo(baseLnCentX + baseLine / 2,baseLnCentY);
path.lineTo(baseLnCentX,baseLnCentY - offset);
path.close();
break;
case DOWN:
path.moveTo(baseLnCentX - baseLine / 2,baseLnCentY);
path.lineTo(baseLnCentX + baseLine / 2,baseLnCentY);
path.lineTo(baseLnCentX,baseLnCentY + offset);
path.close();
break;
case LEFT:
path.moveTo(baseLnCentX,baseLnCentY - baseLine / 2);
path.lineTo(baseLnCentX,baseLnCentY + baseLine / 2);
path.lineTo(baseLnCentX - offset,baseLnCentY);
path.close();
break;
case RIGHT:
path.moveTo(baseLnCentX,baseLnCentY - baseLine / 2);
path.lineTo(baseLnCentX,baseLnCentY + baseLine / 2);
path.lineTo(baseLnCentX + offset,baseLnCentY);
path.close();
break;
}
switch (style) {
case OUTLINE:
paint.setStyle(Paint.Style.STROKE);
break;
case FILL:
paint.setStyle(Paint.Style.FILL);
break;
}
canvas.drawPath(path,paint);
}
